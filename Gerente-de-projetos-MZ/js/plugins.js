// Generated by RPG Maker.
// Do not edit this file directly.
var $plugins =
[
{"name":"UltraMode7","status":false,"description":"Renders the tilemap in 3D. Supports various parameters such as yaw rotation,\r\npitch, field of view, etc.","parameters":{"FADE_Z_COLOR":"1,1,1","FADE_Z_BEGIN":"500","FADE_Z_END":"1150","BASE_SCALE_Z":"550","LEGACY_SCALING":"false","PARALLAX_SCROLL_X_MULTIPLIER":"0.5","PARALLAX_SCROLL_Y_MULTIPLIER":"1.0","TILEMAP_PIXELATED":"true","CHARACTERS_PIXELATED":"true","CHARACTERS_ADJUST_SPRITE_DIRECTION":"true","CHARACTERS_USE_FADE_Z":"true","CHARACTERS_SHIFT_Y":"6","PLAYER_ADJUST_MOVE_DIRECTION":"true","LOOP_MAPS_EXTEND_TILES":"3","DEFAULT_FOV":"60","DEFAULT_PITCH":"45","DEFAULT_YAW":"0","DEFAULT_ROLL":"0","DEFAULT_CAMERA_DISTANCE":"550","DEFAULT_CAMERA_Y":"0","DEFAULT_NEAR_CLIP_Z":"100","DEFAULT_FAR_CLIP_Z":"1200","DEFAULT_PARALLAX_DISTANCE":"550"}},
{"name":"mz3d","status":false,"description":"3D rendering for RPG Maker MZ,\nversion 9.1.2 (Demo)","parameters":{"options":"","3dMenu":"ENABLE","renderDistOptionName":"Render Distance","renderDist":"25","renderDistOption":"true","renderDistMin":"10","renderDistMax":"100","fovOptionName":"FOV","fov":"70","fovOption":"true","fovMin":"50","fovMax":"100","invertYOptionName":"Invert Y Axis","invertYOption":"true","lookSensitivityOptionName":"Look Sensitivity","lookSensitivityOption":"true","spacer|graphics":"","graphics":"","antialiasing":"true","edgefix":"0.5","alphatest":"0.51","lightLimit":"8","backfaceCulling":"true","cameraCollision":"Type2 Smoothed","resScale":"1","spacer|map":"","map":"","cellSize":"20","unloadCells":"false","eventsUpdateNear":"true","mapDefaults":"\"enable(true)\\nsun(white)\\nambient(default)\\nfog(black|20,100)\\nceiling(backface:true)\"","spacer|input":"","input":"","inputCameraMouse":"true","inputCameraGamepad":"true","inputGamepadTurnButton":"Bumpers","WASD":"true","dir8Movement":"Diagonal Smart","keyboardPitch":"true","keyboardTurn":"QE","keyboardStrafe":"QE","turnIncrement":"90","yawSpeed":"180","pitchSpeed":"90","stairThresh":"0.1","walkOffEdge":"0","walkOnEvents":"true","gravity":"8","spacer|tileconfig":"","tileconfig":"","wallTileSettings":"\"height(2)\"","tableTileSettings":"\"height(0.33)\"","starTileSettings":"\"tileOffset(y:1)\\npass(*)\"","ceilingHeight":"2.0","baseHeight":"0.25","layerDist":"0.0100","animDelay":"333","regions":"[\"{\\\"regionId\\\":\\\"1\\\",\\\"conf\\\":\\\"height(1)\\\"}\",\"{\\\"regionId\\\":\\\"2\\\",\\\"conf\\\":\\\"height(2)\\\"}\",\"{\\\"regionId\\\":\\\"3\\\",\\\"conf\\\":\\\"height(3)\\\"}\",\"{\\\"regionId\\\":\\\"4\\\",\\\"conf\\\":\\\"height(4)\\\"}\",\"{\\\"regionId\\\":\\\"5\\\",\\\"conf\\\":\\\"height(5)\\\"}\",\"{\\\"regionId\\\":\\\"6\\\",\\\"conf\\\":\\\"height(6)\\\"}\",\"{\\\"regionId\\\":\\\"7\\\",\\\"conf\\\":\\\"height(7)\\\"}\"]","ttags":"[\"{\\\"terrainTag\\\":\\\"1\\\",\\\"conf\\\":\\\"shape(xcross),height(1),fringe(0)\\\"}\",\"{\\\"terrainTag\\\":\\\"2\\\",\\\"conf\\\":\\\"shape(fence),height(1)\\\"}\"]","spacer|characters":"","characters":"","heightTrigger":"true","eventCharDefaults":"\"shadow(0.8,4)\\nshape(sprite,0.45p)\\nscale(1)\"","eventObjDefaults":"\"shadow(0)\\nshape(sprite,0.45)\\nscale(1)\"","eventTileDefaults":"\"shadow(0)\\nshape(flat)\\nscale(1)\"","eventHeight":"2.0","boatSettings":"{\"conf\":\"shadow(0.8,4),shape(sprite),scale(1),bush(false)\"}","shipSettings":"{\"conf\":\"shadow(0.8,4),shape(sprite),scale(1),bush(false)\"}","airshipSettings":"{\"conf\":\"shadow(1,6),shape(sprite),scale(1),bush(false)\",\"height\":\"2.0\",\"bushLanding\":\"false\"}","allowGlide":"true","spriteDynamicOffset":"0.45","animationDepth":"false","spacer|assets":"","assets":"","diagSymbol":"{d}","shadowTexture":"shadow","alphaMask":"bushAlpha","errorTexture":"errorTexture","requiredImages":""}},
{"name":"AltMenuScreen","status":false,"description":"Alternative menu screen layout.","parameters":{}},
{"name":"AltSaveScreen","status":false,"description":"Alternative save/load screen layout.","parameters":{}},
{"name":"TextPicture","status":false,"description":"Displays text as a picture.","parameters":{}},
{"name":"VisuMZ_0_CoreEngine","status":false,"description":"[RPG Maker MZ] [Tier 0] [Version 1.76] [CoreEngine]","parameters":{"BreakHead":"----------------------------------","CoreEngine":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","QoL:struct":"{\"PlayTest\":\"\",\"NewGameBoot:eval\":\"false\",\"ForceNoPlayTest:eval\":\"false\",\"OpenConsole:eval\":\"true\",\"F6key:eval\":\"true\",\"F7key:eval\":\"true\",\"NewGameCommonEvent:num\":\"0\",\"DigitGrouping\":\"\",\"DigitGroupingStandardText:eval\":\"true\",\"DigitGroupingExText:eval\":\"true\",\"DigitGroupingDamageSprites:eval\":\"true\",\"DigitGroupingGaugeSprites:eval\":\"true\",\"DigitGroupingLocale:str\":\"en-US\",\"PlayerBenefit\":\"\",\"EncounterRateMinimum:num\":\"10\",\"EscapeAlways:eval\":\"true\",\"ImprovedAccuracySystem:eval\":\"true\",\"AccuracyBoost:eval\":\"true\",\"LevelUpFullHp:eval\":\"true\",\"LevelUpFullMp:eval\":\"true\",\"Misc\":\"\",\"AntiZoomPictures:eval\":\"true\",\"AutoStretch:str\":\"stretch\",\"FontShadows:eval\":\"false\",\"FontSmoothing:eval\":\"true\",\"KeyItemProtect:eval\":\"true\",\"ModernControls:eval\":\"true\",\"NoTileShadows:eval\":\"true\",\"PixelateImageRendering:eval\":\"false\",\"RequireFocus:eval\":\"true\",\"SmartEventCollisionPriority:eval\":\"true\"}","BattleSystem:str":"database","Color:struct":"{\"BasicColors\":\"\",\"ColorNormal:str\":\"0\",\"ColorSystem:str\":\"16\",\"ColorCrisis:str\":\"17\",\"ColorDeath:str\":\"18\",\"ColorGaugeBack:str\":\"19\",\"ColorHPGauge1:str\":\"20\",\"ColorHPGauge2:str\":\"21\",\"ColorMPGauge1:str\":\"22\",\"ColorMPGauge2:str\":\"23\",\"ColorMPCost:str\":\"23\",\"ColorPowerUp:str\":\"24\",\"ColorPowerDown:str\":\"25\",\"ColorCTGauge1:str\":\"26\",\"ColorCTGauge2:str\":\"27\",\"ColorTPGauge1:str\":\"28\",\"ColorTPGauge2:str\":\"29\",\"ColorTPCost:str\":\"29\",\"ColorPending:str\":\"#2a847d\",\"ColorExpGauge1:str\":\"30\",\"ColorExpGauge2:str\":\"31\",\"ColorMaxLvGauge1:str\":\"14\",\"ColorMaxLvGauge2:str\":\"6\",\"AlphaColors\":\"\",\"OutlineColor:str\":\"rgba(0, 0, 0, 0.6)\",\"DimColor1:str\":\"rgba(0, 0, 0, 0.6)\",\"DimColor2:str\":\"rgba(0, 0, 0, 0)\",\"ItemBackColor1:str\":\"rgba(32, 32, 32, 0.5)\",\"ItemBackColor2:str\":\"rgba(0, 0, 0, 0.5)\",\"ConditionalColors\":\"\",\"ActorHPColor:func\":\"\\\"// Set the variables used in this function.\\\\nlet actor = arguments[0];\\\\n\\\\n// Check if the actor exists. If not, return normal.\\\\nif (!actor) {\\\\n    return this.normalColor();\\\\n\\\\n// If the actor is dead, return death color.\\\\n} else if (actor.isDead()) {\\\\n    return this.deathColor();\\\\n\\\\n// If the actor is dying, return crisis color.\\\\n} else if (actor.isDying()) {\\\\n    return this.crisisColor();\\\\n\\\\n// Otherwise, return the normal color.\\\\n} else {\\\\n    return this.normalColor();\\\\n}\\\"\",\"ActorMPColor:func\":\"\\\"// Set the variables used in this function.\\\\nlet actor = arguments[0];\\\\n\\\\n// Check if the actor exists. If not, return normal.\\\\nif (!actor) {\\\\n    return this.normalColor();\\\\n\\\\n// If MP rate is below 25%, return crisis color.\\\\n} else if (actor.mpRate() < 0.25) {\\\\n    return this.crisisColor();\\\\n\\\\n// Otherwise, return the normal color.\\\\n} else {\\\\n    return this.normalColor();\\\\n}\\\"\",\"ActorTPColor:func\":\"\\\"// Set the variables used in this function.\\\\nlet actor = arguments[0];\\\\n\\\\n// Check if the actor exists. If not, return normal.\\\\nif (!actor) {\\\\n    return this.normalColor();\\\\n\\\\n// If TP rate is below 25%, return crisis color.\\\\n} else if (actor.tpRate() < 0.25) {\\\\n    return this.crisisColor();\\\\n\\\\n// Otherwise, return the normal color.\\\\n} else {\\\\n    return this.normalColor();\\\\n}\\\"\",\"ParamChange:func\":\"\\\"// Set the variables used in this function.\\\\nlet change = arguments[0];\\\\n\\\\n// If a positive change, use power up color.\\\\nif (change > 0) {\\\\n    return this.powerUpColor();\\\\n\\\\n// If a negative change, use power down color.\\\\n} else if (change < 0) {\\\\n    return this.powerDownColor();\\\\n\\\\n// Otherwise, return the normal color.\\\\n} else {\\\\n    return this.normalColor();\\\\n}\\\"\",\"DamageColor:func\":\"\\\"// Set the variables used in this function.\\\\nlet colorType = arguments[0];\\\\n\\\\n// Check the value of the color type\\\\n// and return an appropriate color.\\\\nswitch (colorType) {\\\\n\\\\n    case 0: // HP damage\\\\n        return \\\\\\\"#ffffff\\\\\\\";\\\\n\\\\n    case 1: // HP recover\\\\n        return \\\\\\\"#b9ffb5\\\\\\\";\\\\n\\\\n    case 2: // MP damage\\\\n        return \\\\\\\"#bb88bb\\\\\\\";\\\\n\\\\n    case 3: // MP recover\\\\n        return \\\\\\\"#80b0ff\\\\\\\";\\\\n\\\\n    default:\\\\n        return \\\\\\\"#808080\\\\\\\";\\\\n}\\\"\"}","Gold:struct":"{\"GoldMax:num\":\"999999999\",\"GoldFontSize:num\":\"24\",\"GoldIcon:num\":\"314\",\"GoldOverlap:str\":\"A Lot\",\"ItemStyle:eval\":\"true\"}","ImgLoad:struct":"{\"animations:arraystr\":\"[]\",\"battlebacks1:arraystr\":\"[]\",\"battlebacks2:arraystr\":\"[]\",\"characters:arraystr\":\"[]\",\"enemies:arraystr\":\"[]\",\"faces:arraystr\":\"[]\",\"parallaxes:arraystr\":\"[]\",\"pictures:arraystr\":\"[]\",\"sv_actors:arraystr\":\"[]\",\"sv_enemies:arraystr\":\"[]\",\"system:arraystr\":\"[\\\"Balloon\\\",\\\"IconSet\\\"]\",\"tilesets:arraystr\":\"[]\",\"titles1:arraystr\":\"[]\",\"titles2:arraystr\":\"[]\"}","KeyboardInput:struct":"{\"Controls\":\"\",\"WASD:eval\":\"false\",\"DashToggleR:eval\":\"false\",\"NameInput\":\"\",\"EnableNameInput:eval\":\"true\",\"DefaultMode:str\":\"keyboard\",\"QwertyLayout:eval\":\"true\",\"NameInputMessage:eval\":\"\\\"Type in this character's name.\\\\nPress \\\\\\\\c[5]ENTER\\\\\\\\c[0] when you're done.\\\\n\\\\n-or-\\\\n\\\\nPress \\\\\\\\c[5]arrow keys\\\\\\\\c[0]/\\\\\\\\c[5]TAB\\\\\\\\c[0] to switch\\\\nto manual character entry.\\\\n\\\\nPress \\\\\\\\c[5]ESC\\\\\\\\c[0]/\\\\\\\\c[5]TAB\\\\\\\\c[0] to use to keyboard.\\\"\",\"NumberInput\":\"\",\"EnableNumberInput:eval\":\"true\",\"ButtonAssist\":\"\",\"Keyboard:str\":\"Keyboard\",\"Manual:str\":\"Manual\"}","MenuBg:struct":"{\"Scene_Menu:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Item:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Skill:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Equip:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Status:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Options:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Save:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Load:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_GameEnd:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"128\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Shop:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Name:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Unlisted:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\"}","ButtonAssist:struct":"{\"General\":\"\",\"Enable:eval\":\"true\",\"Location:str\":\"bottom\",\"BgType:num\":\"0\",\"Text\":\"\",\"TextFmt:str\":\"%1:%2\",\"MultiKeyFmt:str\":\"%1/%2\",\"OkText:str\":\"Select\",\"CancelText:str\":\"Back\",\"SwitchActorText:str\":\"Switch Ally\",\"Keys\":\"\",\"KeyUnlisted:str\":\"\\\\}❪%1❫\\\\{\",\"KeyUP:str\":\"^\",\"KeyDOWN:str\":\"v\",\"KeyLEFT:str\":\"<<\",\"KeyRIGHT:str\":\">>\",\"KeySHIFT:str\":\"\\\\}❪SHIFT❫\\\\{\",\"KeyTAB:str\":\"\\\\}❪TAB❫\\\\{\",\"KeyA:str\":\"A\",\"KeyB:str\":\"B\",\"KeyC:str\":\"C\",\"KeyD:str\":\"D\",\"KeyE:str\":\"E\",\"KeyF:str\":\"F\",\"KeyG:str\":\"G\",\"KeyH:str\":\"H\",\"KeyI:str\":\"I\",\"KeyJ:str\":\"J\",\"KeyK:str\":\"K\",\"KeyL:str\":\"L\",\"KeyM:str\":\"M\",\"KeyN:str\":\"N\",\"KeyO:str\":\"O\",\"KeyP:str\":\"P\",\"KeyQ:str\":\"Q\",\"KeyR:str\":\"R\",\"KeyS:str\":\"S\",\"KeyT:str\":\"T\",\"KeyU:str\":\"U\",\"KeyV:str\":\"V\",\"KeyW:str\":\"W\",\"KeyX:str\":\"X\",\"KeyY:str\":\"Y\",\"KeyZ:str\":\"Z\"}","ControllerButtons:arraystruct":"[]","MenuLayout:struct":"{\"Title:struct\":\"{\\\"TitleScreen\\\":\\\"\\\",\\\"DocumentTitleFmt:str\\\":\\\"%1: %2 - Version %3\\\",\\\"Subtitle:str\\\":\\\"Subtitle\\\",\\\"Version:str\\\":\\\"0.00\\\",\\\"drawGameTitle:func\\\":\\\"\\\\\\\"const x = 20;\\\\\\\\nconst y = Graphics.height / 4;\\\\\\\\nconst maxWidth = Graphics.width - x * 2;\\\\\\\\nconst text = $dataSystem.gameTitle;\\\\\\\\nconst bitmap = this._gameTitleSprite.bitmap;\\\\\\\\nbitmap.fontFace = $gameSystem.mainFontFace();\\\\\\\\nbitmap.outlineColor = \\\\\\\\\\\\\\\"black\\\\\\\\\\\\\\\";\\\\\\\\nbitmap.outlineWidth = 8;\\\\\\\\nbitmap.fontSize = 72;\\\\\\\\nbitmap.drawText(text, x, y, maxWidth, 48, \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"drawGameSubtitle:func\\\":\\\"\\\\\\\"const x = 20;\\\\\\\\nconst y = Graphics.height / 4 + 72;\\\\\\\\nconst maxWidth = Graphics.width - x * 2;\\\\\\\\nconst text = Scene_Title.subtitle;\\\\\\\\nconst bitmap = this._gameTitleSprite.bitmap;\\\\\\\\nbitmap.fontFace = $gameSystem.mainFontFace();\\\\\\\\nbitmap.outlineColor = \\\\\\\\\\\\\\\"black\\\\\\\\\\\\\\\";\\\\\\\\nbitmap.outlineWidth = 6;\\\\\\\\nbitmap.fontSize = 48;\\\\\\\\nbitmap.drawText(text, x, y, maxWidth, 48, \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"drawGameVersion:func\\\":\\\"\\\\\\\"const bitmap = this._gameTitleSprite.bitmap;\\\\\\\\nconst x = 0;\\\\\\\\nconst y = Graphics.height - 20;\\\\\\\\nconst width = Math.round(Graphics.width / 4);\\\\\\\\nconst height = 20;\\\\\\\\nconst c1 = ColorManager.dimColor1();\\\\\\\\nconst c2 = ColorManager.dimColor2();\\\\\\\\nconst text = 'Version ' + Scene_Title.version;\\\\\\\\nbitmap.gradientFillRect(x, y, width, height, c1, c2);\\\\\\\\nbitmap.fontFace = $gameSystem.mainFontFace();\\\\\\\\nbitmap.outlineColor = \\\\\\\\\\\\\\\"black\\\\\\\\\\\\\\\";\\\\\\\\nbitmap.outlineWidth = 3;\\\\\\\\nbitmap.fontSize = 16;\\\\\\\\nbitmap.drawText(text, x + 4, y, Graphics.width, height, \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"CommandRect:func\\\":\\\"\\\\\\\"const offsetX = $dataSystem.titleCommandWindow.offsetX;\\\\\\\\nconst offsetY = $dataSystem.titleCommandWindow.offsetY;\\\\\\\\nconst rows = this.commandWindowRows();\\\\\\\\nconst width = this.mainCommandWidth();\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nconst x = (Graphics.boxWidth - width) / 2 + offsetX;\\\\\\\\nconst y = Graphics.boxHeight - height - 96 + offsetY;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ButtonFadeSpeed:num\\\":\\\"4\\\"}\",\"MainMenu:struct\":\"{\\\"CommandWindow\\\":\\\"\\\",\\\"CommandBgType:num\\\":\\\"0\\\",\\\"CommandRect:func\\\":\\\"\\\\\\\"const width = this.mainCommandWidth();\\\\\\\\nconst height = this.mainAreaHeight() - this.goldWindowRect().height;\\\\\\\\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"GoldWindow\\\":\\\"\\\",\\\"GoldBgType:num\\\":\\\"0\\\",\\\"GoldRect:func\\\":\\\"\\\\\\\"const rows = 1;\\\\\\\\nconst width = this.mainCommandWidth();\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\\\\\\\\nconst y = this.mainAreaBottom() - height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusWindow\\\":\\\"\\\",\\\"StatusBgType:num\\\":\\\"0\\\",\\\"StatusRect:func\\\":\\\"\\\\\\\"const width = Graphics.boxWidth - this.mainCommandWidth();\\\\\\\\nconst height = this.mainAreaHeight();\\\\\\\\nconst x = this.isRightInputMode() ? 0 : Graphics.boxWidth - width;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"ItemMenu:struct\":\"{\\\"HelpWindow\\\":\\\"\\\",\\\"HelpBgType:num\\\":\\\"0\\\",\\\"HelpRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.helpAreaTop();\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.helpAreaHeight();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"CategoryWindow\\\":\\\"\\\",\\\"CategoryBgType:num\\\":\\\"0\\\",\\\"CategoryRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst rows = 1;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ItemWindow\\\":\\\"\\\",\\\"ItemBgType:num\\\":\\\"0\\\",\\\"ItemRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._categoryWindow.y + this._categoryWindow.height;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaBottom() - y;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ActorWindow\\\":\\\"\\\",\\\"ActorBgType:num\\\":\\\"0\\\",\\\"ActorRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaHeight();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"SkillMenu:struct\":\"{\\\"HelpWindow\\\":\\\"\\\",\\\"HelpBgType:num\\\":\\\"0\\\",\\\"HelpRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.helpAreaTop();\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.helpAreaHeight();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"SkillTypeWindow\\\":\\\"\\\",\\\"SkillTypeBgType:num\\\":\\\"0\\\",\\\"SkillTypeRect:func\\\":\\\"\\\\\\\"const rows = 3;\\\\\\\\nconst width = this.mainCommandWidth();\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusWindow\\\":\\\"\\\",\\\"StatusBgType:num\\\":\\\"0\\\",\\\"StatusRect:func\\\":\\\"\\\\\\\"const width = Graphics.boxWidth - this.mainCommandWidth();\\\\\\\\nconst height = this._skillTypeWindow.height;\\\\\\\\nconst x = this.isRightInputMode() ? 0 : Graphics.boxWidth - width;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ItemWindow\\\":\\\"\\\",\\\"ItemBgType:num\\\":\\\"0\\\",\\\"ItemRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._statusWindow.y + this._statusWindow.height;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaHeight() - this._statusWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ActorWindow\\\":\\\"\\\",\\\"ActorBgType:num\\\":\\\"0\\\",\\\"ActorRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaHeight();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"EquipMenu:struct\":\"{\\\"HelpWindow\\\":\\\"\\\",\\\"HelpBgType:num\\\":\\\"0\\\",\\\"HelpRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.helpAreaTop();\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.helpAreaHeight();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusWindow\\\":\\\"\\\",\\\"StatusBgType:num\\\":\\\"0\\\",\\\"StatusRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst width = this.statusWidth();\\\\\\\\nconst height = this.mainAreaHeight();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"CommandWindow\\\":\\\"\\\",\\\"CommandBgType:num\\\":\\\"0\\\",\\\"CommandRect:func\\\":\\\"\\\\\\\"const x = this.statusWidth();\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst rows = 1;\\\\\\\\nconst width = Graphics.boxWidth - this.statusWidth();\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"SlotWindow\\\":\\\"\\\",\\\"SlotBgType:num\\\":\\\"0\\\",\\\"SlotRect:func\\\":\\\"\\\\\\\"const commandWindowRect = this.commandWindowRect();\\\\\\\\nconst x = this.statusWidth();\\\\\\\\nconst y = commandWindowRect.y + commandWindowRect.height;\\\\\\\\nconst width = Graphics.boxWidth - this.statusWidth();\\\\\\\\nconst height = this.mainAreaHeight() - commandWindowRect.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ItemWindow\\\":\\\"\\\",\\\"ItemBgType:num\\\":\\\"0\\\",\\\"ItemRect:func\\\":\\\"\\\\\\\"return this.slotWindowRect();\\\\\\\"\\\"}\",\"StatusMenu:struct\":\"{\\\"ProfileWindow\\\":\\\"\\\",\\\"ProfileBgType:num\\\":\\\"0\\\",\\\"ProfileRect:func\\\":\\\"\\\\\\\"const width = Graphics.boxWidth;\\\\\\\\nconst height = this.profileHeight();\\\\\\\\nconst x = 0;\\\\\\\\nconst y = this.mainAreaBottom() - height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusWindow\\\":\\\"\\\",\\\"StatusBgType:num\\\":\\\"0\\\",\\\"StatusRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.statusParamsWindowRect().y - y;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusParamsWindow\\\":\\\"\\\",\\\"StatusParamsBgType:num\\\":\\\"0\\\",\\\"StatusParamsRect:func\\\":\\\"\\\\\\\"const width = this.statusParamsWidth();\\\\\\\\nconst height = this.statusParamsHeight();\\\\\\\\nconst x = 0;\\\\\\\\nconst y = this.mainAreaBottom() - this.profileHeight() - height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusEquipWindow\\\":\\\"\\\",\\\"StatusEquipBgType:num\\\":\\\"0\\\",\\\"StatusEquipRect:func\\\":\\\"\\\\\\\"const width = Graphics.boxWidth - this.statusParamsWidth();\\\\\\\\nconst height = this.statusParamsHeight();\\\\\\\\nconst x = this.statusParamsWidth();\\\\\\\\nconst y = this.mainAreaBottom() - this.profileHeight() - height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"OptionsMenu:struct\":\"{\\\"OptionsWindow\\\":\\\"\\\",\\\"OptionsBgType:num\\\":\\\"0\\\",\\\"OptionsRect:func\\\":\\\"\\\\\\\"const n = Math.min(this.maxCommands(), this.maxVisibleCommands());\\\\\\\\nconst width = 400;\\\\\\\\nconst height = this.calcWindowHeight(n, true);\\\\\\\\nconst x = (Graphics.boxWidth - width) / 2;\\\\\\\\nconst y = (Graphics.boxHeight - height) / 2;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"SaveMenu:struct\":\"{\\\"HelpWindow\\\":\\\"\\\",\\\"HelpBgType:num\\\":\\\"0\\\",\\\"HelpRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst rows = 1;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.calcWindowHeight(rows, false);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ListWindow\\\":\\\"\\\",\\\"ListBgType:num\\\":\\\"0\\\",\\\"ListRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop() + this._helpWindow.height;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaHeight() - this._helpWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"LoadMenu:struct\":\"{\\\"HelpWindow\\\":\\\"\\\",\\\"HelpBgType:num\\\":\\\"0\\\",\\\"HelpRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst rows = 1;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.calcWindowHeight(rows, false);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ListWindow\\\":\\\"\\\",\\\"ListBgType:num\\\":\\\"0\\\",\\\"ListRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop() + this._helpWindow.height;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaHeight() - this._helpWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"GameEnd:struct\":\"{\\\"CommandList:arraystruct\\\":\\\"[\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"toTitle\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Untitled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return TextManager.toTitle;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return null;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CallHandlerJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"SceneManager._scene.commandToTitle();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Untitled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return TextManager.cancel;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return null;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CallHandlerJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"SceneManager._scene.popScene();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\"]\\\",\\\"CommandBgType:num\\\":\\\"0\\\",\\\"CommandRect:func\\\":\\\"\\\\\\\"const rows = 2;\\\\\\\\nconst width = this.mainCommandWidth();\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nconst x = (Graphics.boxWidth - width) / 2;\\\\\\\\nconst y = (Graphics.boxHeight - height) / 2;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"ShopMenu:struct\":\"{\\\"HelpWindow\\\":\\\"\\\",\\\"HelpBgType:num\\\":\\\"0\\\",\\\"HelpRect:func\\\":\\\"\\\\\\\"const wx = 0;\\\\\\\\nconst wy = this.helpAreaTop();\\\\\\\\nconst ww = Graphics.boxWidth;\\\\\\\\nconst wh = this.helpAreaHeight();\\\\\\\\nreturn new Rectangle(wx, wy, ww, wh);\\\\\\\"\\\",\\\"GoldWindow\\\":\\\"\\\",\\\"GoldBgType:num\\\":\\\"0\\\",\\\"GoldRect:func\\\":\\\"\\\\\\\"const rows = 1;\\\\\\\\nconst width = this.mainCommandWidth();\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nconst x = Graphics.boxWidth - width;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"CommandWindow\\\":\\\"\\\",\\\"CommandBgType:num\\\":\\\"0\\\",\\\"CommandRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst rows = 1;\\\\\\\\nconst width = this._goldWindow.x;\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"DummyWindow\\\":\\\"\\\",\\\"DummyBgType:num\\\":\\\"0\\\",\\\"DummyRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._commandWindow.y + this._commandWindow.height;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaHeight() - this._commandWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"NumberWindow\\\":\\\"\\\",\\\"NumberBgType:num\\\":\\\"0\\\",\\\"NumberRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._dummyWindow.y;\\\\\\\\nconst width = Graphics.boxWidth - this.statusWidth();\\\\\\\\nconst height = this._dummyWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusWindow\\\":\\\"\\\",\\\"StatusBgType:num\\\":\\\"0\\\",\\\"StatusRect:func\\\":\\\"\\\\\\\"const width = this.statusWidth();\\\\\\\\nconst height = this._dummyWindow.height;\\\\\\\\nconst x = Graphics.boxWidth - width;\\\\\\\\nconst y = this._dummyWindow.y;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"BuyWindow\\\":\\\"\\\",\\\"BuyBgType:num\\\":\\\"0\\\",\\\"BuyRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._dummyWindow.y;\\\\\\\\nconst width = Graphics.boxWidth - this.statusWidth();\\\\\\\\nconst height = this._dummyWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"CategoryWindow\\\":\\\"\\\",\\\"CategoryBgType:num\\\":\\\"0\\\",\\\"CategoryRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._dummyWindow.y;\\\\\\\\nconst rows = 1;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"SellWindow\\\":\\\"\\\",\\\"SellBgType:num\\\":\\\"0\\\",\\\"SellRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._categoryWindow.y + this._categoryWindow.height;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height =\\\\\\\\n    this.mainAreaHeight() -\\\\\\\\n    this._commandWindow.height -\\\\\\\\n    this._categoryWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"NameMenu:struct\":\"{\\\"EditWindow\\\":\\\"\\\",\\\"EditBgType:num\\\":\\\"0\\\",\\\"EditRect:func\\\":\\\"\\\\\\\"const rows = 9;\\\\\\\\nconst inputWindowHeight = this.calcWindowHeight(rows, true);\\\\\\\\nconst padding = $gameSystem.windowPadding();\\\\\\\\nconst width = 600;\\\\\\\\nconst height = Math.min(ImageManager.faceHeight + padding * 2, this.mainAreaHeight() - inputWindowHeight);\\\\\\\\nconst x = (Graphics.boxWidth - width) / 2;\\\\\\\\nconst y = (this.mainAreaHeight() - (height + inputWindowHeight)) / 2 + this.mainAreaTop();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"InputWindow\\\":\\\"\\\",\\\"InputBgType:num\\\":\\\"0\\\",\\\"InputRect:func\\\":\\\"\\\\\\\"const x = this._editWindow.x;\\\\\\\\nconst y = this._editWindow.y + this._editWindow.height;\\\\\\\\nconst rows = 9;\\\\\\\\nconst width = this._editWindow.width;\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\"}","Param:struct":"{\"DisplayedParams:arraystr\":\"[\\\"ATK\\\",\\\"DEF\\\",\\\"MAT\\\",\\\"MDF\\\",\\\"AGI\\\",\\\"LUK\\\"]\",\"ExtDisplayedParams:arraystr\":\"[\\\"MaxHP\\\",\\\"MaxMP\\\",\\\"ATK\\\",\\\"DEF\\\",\\\"MAT\\\",\\\"MDF\\\",\\\"AGI\\\",\\\"LUK\\\"]\",\"BasicParameters\":\"\",\"CrisisRate:num\":\"0.25\",\"BasicParameterFormula:func\":\"\\\"// Determine the variables used in this calculation.\\\\nlet paramId = arguments[0];\\\\nlet base = this.paramBase(paramId);\\\\nlet plus = this.paramPlus(paramId);\\\\nlet paramRate = this.paramRate(paramId);\\\\nlet buffRate = this.paramBuffRate(paramId);\\\\nlet flatBonus = this.paramFlatBonus(paramId);\\\\n\\\\n// Formula to determine total parameter value.\\\\nlet value = (base + plus) * paramRate * buffRate + flatBonus;\\\\n\\\\n// Determine the limits\\\\nconst maxValue = this.paramMax(paramId);\\\\nconst minValue = this.paramMin(paramId);\\\\n\\\\n// Final value\\\\nreturn Math.round(value.clamp(minValue, maxValue));\\\"\",\"BasicParamCaps\":\"\",\"BasicActorParamCaps\":\"\",\"BasicActorParamMax0:str\":\"9999\",\"BasicActorParamMax1:str\":\"9999\",\"BasicActorParamMax2:str\":\"999\",\"BasicActorParamMax3:str\":\"999\",\"BasicActorParamMax4:str\":\"999\",\"BasicActorParamMax5:str\":\"999\",\"BasicActorParamMax6:str\":\"999\",\"BasicActorParamMax7:str\":\"999\",\"BasicEnemyParamCaps\":\"\",\"BasicEnemyParamMax0:str\":\"999999\",\"BasicEnemyParamMax1:str\":\"9999\",\"BasicEnemyParamMax2:str\":\"999\",\"BasicEnemyParamMax3:str\":\"999\",\"BasicEnemyParamMax4:str\":\"999\",\"BasicEnemyParamMax5:str\":\"999\",\"BasicEnemyParamMax6:str\":\"999\",\"BasicEnemyParamMax7:str\":\"999\",\"XParameters\":\"\",\"XParameterFormula:func\":\"\\\"// Determine the variables used in this calculation.\\\\nlet xparamId = arguments[0];\\\\nlet base = this.traitsSum(Game_BattlerBase.TRAIT_XPARAM, xparamId);\\\\nlet plus = this.xparamPlus(xparamId);\\\\nlet paramRate = this.xparamRate(xparamId);\\\\nlet flatBonus = this.xparamFlatBonus(xparamId);\\\\n\\\\n// Formula to determine total parameter value.\\\\nlet value = (base + plus) * paramRate + flatBonus;\\\\n\\\\n// Final value\\\\nreturn value;\\\"\",\"XParamVocab\":\"\",\"XParamVocab0:str\":\"Hit\",\"XParamVocab1:str\":\"Evasion\",\"XParamVocab2:str\":\"Critical Rate\",\"XParamVocab3:str\":\"Critical Evade\",\"XParamVocab4:str\":\"Magic Evade\",\"XParamVocab5:str\":\"Magic Reflect\",\"XParamVocab6:str\":\"Counter\",\"XParamVocab7:str\":\"HP Regen\",\"XParamVocab8:str\":\"MP Regen\",\"XParamVocab9:str\":\"TP Regen\",\"SParameters\":\"\",\"SParameterFormula:func\":\"\\\"// Determine the variables used in this calculation.\\\\nlet sparamId = arguments[0];\\\\nlet base = this.traitsPi(Game_BattlerBase.TRAIT_SPARAM, sparamId);\\\\nlet plus = this.sparamPlus(sparamId);\\\\nlet paramRate = this.sparamRate(sparamId);\\\\nlet flatBonus = this.sparamFlatBonus(sparamId);\\\\n\\\\n// Formula to determine total parameter value.\\\\nlet value = (base + plus) * paramRate + flatBonus;\\\\n\\\\n// Final value\\\\nreturn value;\\\"\",\"SParamVocab\":\"\",\"SParamVocab0:str\":\"Aggro\",\"SParamVocab1:str\":\"Guard\",\"SParamVocab2:str\":\"Recovery\",\"SParamVocab3:str\":\"Item Effect\",\"SParamVocab4:str\":\"MP Cost\",\"SParamVocab5:str\":\"TP Charge\",\"SParamVocab6:str\":\"Physical DMG\",\"SParamVocab7:str\":\"Magical DMG\",\"SParamVocab8:str\":\"Floor DMG\",\"SParamVocab9:str\":\"EXP Gain\",\"Icons\":\"\",\"DrawIcons:eval\":\"true\",\"IconParam0:str\":\"84\",\"IconParam1:str\":\"165\",\"IconParam2:str\":\"76\",\"IconParam3:str\":\"81\",\"IconParam4:str\":\"101\",\"IconParam5:str\":\"133\",\"IconParam6:str\":\"140\",\"IconParam7:str\":\"87\",\"IconXParam0:str\":\"102\",\"IconXParam1:str\":\"82\",\"IconXParam2:str\":\"78\",\"IconXParam3:str\":\"82\",\"IconXParam4:str\":\"171\",\"IconXParam5:str\":\"222\",\"IconXParam6:str\":\"77\",\"IconXParam7:str\":\"72\",\"IconXParam8:str\":\"72\",\"IconXParam9:str\":\"72\",\"IconSParam0:str\":\"5\",\"IconSParam1:str\":\"128\",\"IconSParam2:str\":\"72\",\"IconSParam3:str\":\"176\",\"IconSParam4:str\":\"165\",\"IconSParam5:str\":\"164\",\"IconSParam6:str\":\"76\",\"IconSParam7:str\":\"79\",\"IconSParam8:str\":\"141\",\"IconSParam9:str\":\"73\"}","CustomParam:arraystruct":"[\"{\\\"ParamName:str\\\":\\\"Strength\\\",\\\"Abbreviation:str\\\":\\\"str\\\",\\\"Icon:num\\\":\\\"77\\\",\\\"Type:str\\\":\\\"integer\\\",\\\"ValueJS:json\\\":\\\"\\\\\\\"// Declare Constants\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nreturn (user.atk * 0.75) + (user.def * 0.25);\\\\\\\"\\\"}\",\"{\\\"ParamName:str\\\":\\\"Dexterity\\\",\\\"Abbreviation:str\\\":\\\"dex\\\",\\\"Icon:num\\\":\\\"82\\\",\\\"Type:str\\\":\\\"integer\\\",\\\"ValueJS:json\\\":\\\"\\\\\\\"// Declare Constants\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nreturn (user.agi * 0.75) + (user.atk * 0.25);\\\\\\\"\\\"}\",\"{\\\"ParamName:str\\\":\\\"Constitution\\\",\\\"Abbreviation:str\\\":\\\"con\\\",\\\"Icon:num\\\":\\\"81\\\",\\\"Type:str\\\":\\\"integer\\\",\\\"ValueJS:json\\\":\\\"\\\\\\\"// Declare Constants\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nreturn (user.def * 0.75) + (user.mdf * 0.25);\\\\\\\"\\\"}\",\"{\\\"ParamName:str\\\":\\\"Intelligence\\\",\\\"Abbreviation:str\\\":\\\"int\\\",\\\"Icon:num\\\":\\\"79\\\",\\\"Type:str\\\":\\\"integer\\\",\\\"ValueJS:json\\\":\\\"\\\\\\\"// Declare Constants\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nreturn (user.mat * 0.75) + (user.mdf * 0.25);\\\\\\\"\\\"}\",\"{\\\"ParamName:str\\\":\\\"Wisdom\\\",\\\"Abbreviation:str\\\":\\\"wis\\\",\\\"Icon:num\\\":\\\"72\\\",\\\"Type:str\\\":\\\"integer\\\",\\\"ValueJS:json\\\":\\\"\\\\\\\"// Declare Constants\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nreturn (user.mdf * 0.75) + (user.luk * 0.25);\\\\\\\"\\\"}\",\"{\\\"ParamName:str\\\":\\\"Charisma\\\",\\\"Abbreviation:str\\\":\\\"cha\\\",\\\"Icon:num\\\":\\\"84\\\",\\\"Type:str\\\":\\\"integer\\\",\\\"ValueJS:json\\\":\\\"\\\\\\\"// Declare Constants\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nreturn (user.luk * 0.75) + (user.agi * 0.25);\\\\\\\"\\\"}\"]","ScreenResolution:struct":"{\"Maps\":\"\",\"AutoScrollLockX:eval\":\"true\",\"AutoScrollLockY:eval\":\"true\",\"DisplayLockX:num\":\"0.15625\",\"DisplayLockY:num\":\"0.00000\",\"Troops\":\"\",\"RepositionActors:eval\":\"true\",\"RepositionEnemies:eval\":\"true\",\"RepositionEnemies130:eval\":\"false\"}","ScreenShake:struct":"{\"DefaultStyle:str\":\"random\",\"originalJS:func\":\"\\\"// Calculation\\\\nthis.x += Math.round($gameScreen.shake());\\\"\",\"randomJS:func\":\"\\\"// Calculation\\\\n// Original Formula by Aries of Sheratan\\\\nconst power = $gameScreen._shakePower * 0.75;\\\\nconst speed = $gameScreen._shakeSpeed * 0.60;\\\\nconst duration = $gameScreen._shakeDuration;\\\\nthis.x += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\\\\nthis.y += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\\\"\",\"horzJS:func\":\"\\\"// Calculation\\\\n// Original Formula by Aries of Sheratan\\\\nconst power = $gameScreen._shakePower * 0.75;\\\\nconst speed = $gameScreen._shakeSpeed * 0.60;\\\\nconst duration = $gameScreen._shakeDuration;\\\\nthis.x += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\\\"\",\"vertJS:func\":\"\\\"// Calculation\\\\n// Original Formula by Aries of Sheratan\\\\nconst power = $gameScreen._shakePower * 0.75;\\\\nconst speed = $gameScreen._shakeSpeed * 0.60;\\\\nconst duration = $gameScreen._shakeDuration;\\\\nthis.y += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\\\"\"}","TitleCommandList:arraystruct":"[\"{\\\"Symbol:str\\\":\\\"newGame\\\",\\\"TextStr:str\\\":\\\"Untitled\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.newGame;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandNewGame();\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"continue\\\",\\\"TextStr:str\\\":\\\"Untitled\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.continue_;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return DataManager.isAnySavefileExists();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandContinue();\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"options\\\",\\\"TextStr:str\\\":\\\"Untitled\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.options;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandOptions();\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"shutdown\\\",\\\"TextStr:str\\\":\\\"Untitled\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.gameEnd;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return Utils.isNwjs();\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager.exit();\\\\\\\\n\\\\\\\\n// Note!\\\\\\\\n// Do NOT use this command with mobile devices or\\\\\\\\n// browser games. All it does is cause the game to\\\\\\\\n// display a blank, black canvas which the player\\\\\\\\n// is unable to do anything with. It does NOT force\\\\\\\\n// close the browser tab nor the app.\\\\\\\"\\\"}\"]","TitlePicButtons:arraystruct":"[]","UI:struct":"{\"UIArea\":\"\",\"FadeSpeed:num\":\"24\",\"BoxMargin:num\":\"4\",\"CommandWidth:num\":\"240\",\"BottomHelp:eval\":\"false\",\"RightMenus:eval\":\"true\",\"ShowButtons:eval\":\"true\",\"cancelShowButton:eval\":\"true\",\"menuShowButton:eval\":\"true\",\"pagedownShowButton:eval\":\"true\",\"numberShowButton:eval\":\"true\",\"ButtonHeight:num\":\"52\",\"BottomButtons:eval\":\"false\",\"SideButtons:eval\":\"true\",\"MenuObjects\":\"\",\"LvExpGauge:eval\":\"true\",\"ParamArrow:str\":\"→\",\"TextCodeSupport\":\"\",\"TextCodeClassNames:eval\":\"true\",\"TextCodeNicknames:eval\":\"true\"}","Window:struct":"{\"WindowDefaults\":\"\",\"EnableMasking:eval\":\"false\",\"LineHeight:num\":\"36\",\"SelectableItems\":\"\",\"ShowItemBackground:eval\":\"true\",\"ItemHeight:num\":\"8\",\"DrawItemBackgroundJS:func\":\"\\\"const rect = arguments[0];\\\\nconst c1 = ColorManager.itemBackColor1();\\\\nconst c2 = ColorManager.itemBackColor2();\\\\nconst x = rect.x;\\\\nconst y = rect.y;\\\\nconst w = rect.width;\\\\nconst h = rect.height;\\\\nthis.contentsBack.gradientFillRect(x, y, w, h, c1, c2, true);\\\\nthis.contentsBack.strokeRect(x, y, w, h, c1);\\\"\",\"ItemPadding:num\":\"8\",\"BackOpacity:num\":\"192\",\"TranslucentOpacity:num\":\"160\",\"OpenSpeed:num\":\"32\",\"ColSpacing:num\":\"8\",\"RowSpacing:num\":\"4\"}","jsQuickFunc:arraystruct":"[\"{\\\"FunctionName:str\\\":\\\"Example\\\",\\\"CodeJS:json\\\":\\\"\\\\\\\"// Insert this as a function anywhere you can input code\\\\\\\\n// such as Script Calls or Conditional Branch Scripts.\\\\\\\\n\\\\\\\\n// Process Code\\\\\\\\nreturn 'Example';\\\\\\\"\\\"}\",\"{\\\"FunctionName:str\\\":\\\"Bad  Code  Name\\\",\\\"CodeJS:json\\\":\\\"\\\\\\\"// If a function name has spaces in them, the spaces will\\\\\\\\n// be removed. \\\\\\\\\\\\\\\"Bad  Code  Name\\\\\\\\\\\\\\\" becomes \\\\\\\\\\\\\\\"BadeCodeName\\\\\\\\\\\\\\\".\\\\\\\\n\\\\\\\\n// Process Code\\\\\\\\nOhNoItsBadCode()\\\\\\\\n\\\\\\\\n// If a function has bad code, a fail safe will catch the\\\\\\\\n// error and display it in the console.\\\\\\\"\\\"}\",\"{\\\"FunctionName:str\\\":\\\"RandomNumber\\\",\\\"CodeJS:json\\\":\\\"\\\\\\\"// This generates a random number from 0 to itself.\\\\\\\\n// Example: RandomNumber(10)\\\\\\\\n\\\\\\\\n// Process Code\\\\\\\\nconst number = (arguments[0] || 0) + 1;\\\\\\\\nreturn Math.floor(number * Math.random());\\\\\\\"\\\"}\",\"{\\\"FunctionName:str\\\":\\\"RandomBetween\\\",\\\"CodeJS:json\\\":\\\"\\\\\\\"// This generates a random number between two arguments.\\\\\\\\n// Example: RandomBetween(5, 10)\\\\\\\\n\\\\\\\\n// Process Code\\\\\\\\nlet min = Math.min(arguments[0] || 0, arguments[1] || 0);\\\\\\\\nlet max = Math.max(arguments[0] || 0, arguments[1] || 0);\\\\\\\\nreturn Math.floor(Math.random() * (max - min + 1) + min);\\\\\\\"\\\"}\",\"{\\\"FunctionName:str\\\":\\\"RandomFrom\\\",\\\"CodeJS:json\\\":\\\"\\\\\\\"// Selects a number from the list of inserted numbers.\\\\\\\\n// Example: RandomFrom(5, 10, 15, 20)\\\\\\\\n\\\\\\\\n// Process Code\\\\\\\\nreturn arguments[Math.randomInt(arguments.length)];\\\\\\\"\\\"}\"]","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_1_MainMenuCore","status":true,"description":"[RPG Maker MZ] [Tier 1] [Version 1.21] [MainMenuCore]","parameters":{"BreakHead":"----------------------------------","MainMenuCore":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","General:struct":"{\"GoldWindow\":\"\",\"ThinGoldWindow:eval\":\"true\",\"AutoGoldHeight:eval\":\"true\",\"AutoGoldY:eval\":\"true\",\"StatusWindow\":\"\",\"StatusSelectLast:eval\":\"false\",\"SoloParty\":\"\",\"SoloQuick:eval\":\"true\",\"SubMenus\":\"\",\"ActorBgMenus:arraystr\":\"[\\\"Scene_Skill\\\"]\",\"ActorBgMenuJS:func\":\"\\\"this.anchor.x = 0.5;\\\\nconst scale = 1.25;\\\\nthis.scale.x = this.scale.y = scale;\\\\nthis.x = Graphics.width;\\\\nthis.y = Graphics.height - (this.bitmap.height * Math.abs(scale));\\\\nthis._targetX = Graphics.width * 3 / 4;\\\\nthis._targetY = Graphics.height - (this.bitmap.height * Math.abs(scale));\\\\nthis._duration = 10;\\\\nthis.opacity = 0;\\\"\",\"PartyWindow\":\"\",\"ShowReserve:eval\":\"true\",\"HideMainMenuOnly:eval\":\"true\"}","CommandList:arraystruct":"[\"{\\\"Symbol:str\\\":\\\"item\\\",\\\"Icon:num\\\":\\\"208\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.item;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return this.needsCommand(\\\\\\\\\\\\\\\"item\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.areMainCommandsEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandItem();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"classChange\\\",\\\"Icon:num\\\":\\\"133\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.classChangeMenuCommand;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return Imported.VisuMZ_2_ClassChangeSystem &&\\\\\\\\n    this.isClassChangeCommandVisible();\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.areMainCommandsEnabled() &&\\\\\\\\n    this.isClassChangeCommandEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandPersonal();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"SceneManager.push(Scene_ClassChange);\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"skill\\\",\\\"Icon:num\\\":\\\"101\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.skill;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return this.needsCommand(\\\\\\\\\\\\\\\"skill\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.areMainCommandsEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandPersonal();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"SceneManager.push(Scene_Skill);\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"equip\\\",\\\"Icon:num\\\":\\\"137\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.equip;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return this.needsCommand(\\\\\\\\\\\\\\\"equip\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.areMainCommandsEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandPersonal();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"SceneManager.push(Scene_Equip);\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"status\\\",\\\"Subcategory:str\\\":\\\"\\\",\\\"Icon:num\\\":\\\"77\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.status;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return this.needsCommand(\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.areMainCommandsEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandPersonal();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"SceneManager.push(Scene_Status);\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"viajar\\\",\\\"Subcategory:str\\\":\\\"\\\",\\\"Icon:num\\\":\\\"82\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return \\\\\\\\\\\\\\\"Viajar\\\\\\\\\\\\\\\";\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return this.needsCommand(\\\\\\\\\\\\\\\"save\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isSaveEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return 6;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandCommonEvent();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"itemCrafting\\\",\\\"Icon:num\\\":\\\"223\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.ItemCraftingMenuCommand;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return Imported.VisuMZ_2_ItemCraftingSys &&\\\\\\\\n    this.isItemCraftingCommandVisible();\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isItemCraftingCommandEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandItemCrafting();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"subcategory\\\",\\\"Subcategory:str\\\":\\\"\\\",\\\"Icon:num\\\":\\\"230\\\",\\\"TextStr:str\\\":\\\"Datalog\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return 'Text';\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return this.isSubcategoryVisible(arguments[1]);\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"// This becomes the subcategory name. Case-sensitive.\\\\\\\\n\\\\\\\\nreturn 'datalog';\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\\nthis.setSubcategory(ext);\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"quest\\\",\\\"Subcategory:str\\\":\\\"datalog\\\",\\\"Icon:num\\\":\\\"186\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.questCommandName;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return Imported.VisuMZ_2_QuestSystem &&\\\\\\\\n    this.isQuestCommandVisible();\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isQuestCommandEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandQuest();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"bestiary\\\",\\\"Subcategory:str\\\":\\\"datalog\\\",\\\"Icon:num\\\":\\\"10\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.BestiaryMenuCommand;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return Imported.VisuMZ_2_Bestiary &&\\\\\\\\n    this.isBestiaryCommandVisible();\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isBestiaryCommandEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandBestiary();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"tutorialList\\\",\\\"Subcategory:str\\\":\\\"datalog\\\",\\\"Icon:num\\\":\\\"187\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.tutorial.menuCmd;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return Imported.VisuMZ_2_TutorialPanelSys &&\\\\\\\\n    this.isTutorialListCommandVisible();\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isTutorialListCommandEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandTutorialList();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"messageLog\\\",\\\"Subcategory:str\\\":\\\"datalog\\\",\\\"Icon:num\\\":\\\"193\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.MessageLogMenuCommand;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return Imported.VisuMZ_3_MessageLog &&\\\\\\\\n    this.isMessageLogCommandVisible();\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isMessageLogCommandEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandMessageLog();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"combatLog\\\",\\\"Subcategory:str\\\":\\\"datalog\\\",\\\"Icon:num\\\":\\\"189\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.combatLog_BattleCmd_Name;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return Imported.VisuMZ_4_CombatLog &&\\\\\\\\n    this.isCombatLogCommandVisible();\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isCombatLogCommandEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandCombatLog();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"cgGallery\\\",\\\"Subcategory:str\\\":\\\"datalog\\\",\\\"Icon:num\\\":\\\"311\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.cgGalleryMenuCommand;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return Imported.VisuMZ_4_CGGallery &&\\\\\\\\n    this.isCgGalleryCommandVisible();\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isCgGalleryCommandEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandCgGallery();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"creditsPage\\\",\\\"Subcategory:str\\\":\\\"datalog\\\",\\\"Icon:num\\\":\\\"193\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.CreditsPageMenuCommand;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return Imported.VisuMZ_4_CreditsPage &&\\\\\\\\n    this.isCreditsPageCommandVisible();\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isCreditsPageCommandEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandCreditsPage();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"patchNotes\\\",\\\"Subcategory:str\\\":\\\"datalog\\\",\\\"Icon:num\\\":\\\"83\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.PatchNotesMenuCommand;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return Imported.VisuMZ_4_PatchNotes &&\\\\\\\\n    this.isPatchNotesCommandVisible();\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isPatchNotesCommandEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandPatchNotes();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"formation\\\",\\\"Icon:num\\\":\\\"75\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.formation;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return this.needsCommand(\\\\\\\\\\\\\\\"formation\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isFormationEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandFormation();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"options\\\",\\\"Icon:num\\\":\\\"83\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.options;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return this.needsCommand(\\\\\\\\\\\\\\\"options\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isOptionsEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandOptions();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"save\\\",\\\"Icon:num\\\":\\\"189\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.save;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return this.needsCommand(\\\\\\\\\\\\\\\"save\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isSaveEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandSave();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"load\\\",\\\"Subcategory:str\\\":\\\"\\\",\\\"Icon:num\\\":\\\"191\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return 'Carregar';\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return this.needsCommand(\\\\\\\\\\\\\\\"save\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return DataManager.isAnySavefileExists();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandLoad();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"commonEvent1\\\",\\\"Icon:num\\\":\\\"88\\\",\\\"TextStr:str\\\":\\\"Common Event 1\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return 'Text';\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return false;\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return 1;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandCommonEvent();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"commonEvent2\\\",\\\"Icon:num\\\":\\\"87\\\",\\\"TextStr:str\\\":\\\"Common Event 2\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return 'Text';\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return false;\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.areMainCommandsEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return 2;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandPersonal();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"// Declare Ext\\\\\\\\nconst ext = arguments[0];\\\\\\\\n\\\\\\\\n// Declare Status Window\\\\\\\\nconst statusWindow = SceneManager._scene._statusWindow;\\\\\\\\n\\\\\\\\n// Declare Actor ID\\\\\\\\nconst actorId = statusWindow.actor(statusWindow.index()).actorId();\\\\\\\\n\\\\\\\\n// Set variable 1 to Actor ID\\\\\\\\n$gameVariables.setValue(1, actorId);\\\\\\\\n\\\\\\\\n// Prepare Common Event ext to run\\\\\\\\n$gameTemp.reserveCommonEvent(ext);\\\\\\\\n\\\\\\\\n// Exit Main Menu\\\\\\\\nSceneManager._scene.popScene();\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"gameEnd\\\",\\\"Icon:num\\\":\\\"187\\\",\\\"TextStr:str\\\":\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.gameEnd;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return this.needsCommand(\\\\\\\\\\\\\\\"gameEnd\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return this.isGameEndEnabled();\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandGameEnd();\\\\\\\"\\\",\\\"PersonalHandlerJS:func\\\":\\\"\\\\\\\"const ext = arguments[0];\\\\\\\"\\\"}\"]","Playtime:struct":"{\"Enable:eval\":\"true\",\"AdjustCommandHeight:func\":\"true\",\"BgType:num\":\"0\",\"FontSize:num\":\"24\",\"Icon:num\":\"75\",\"Time:str\":\"Time\",\"WindowRect:func\":\"\\\"const rows = 1;\\\\nconst ww = this.mainCommandWidth();\\\\nconst wh = this.calcWindowHeight(rows, false);\\\\nconst wx = this.isRightInputMode() ? Graphics.boxWidth - ww : 0;\\\\nlet wy = this.mainAreaBottom() - wh;\\\\nif (this._goldWindow) wy -= this._goldWindow.height;\\\\nif (this.canCreateVariableWindow()) wy -= this.variableWindowRect().height;\\\\nreturn new Rectangle(wx, wy, ww, wh);\\\"\"}","Variable:struct":"{\"Enable:eval\":\"false\",\"AdjustCommandHeight:func\":\"true\",\"BgType:num\":\"0\",\"FontSize:num\":\"24\",\"VarList:arraynum\":\"[\\\"1\\\",\\\"2\\\"]\",\"WindowRect:func\":\"\\\"const rows = VisuMZ.MainMenuCore.Settings.Variable.VarList.length;\\\\nconst ww = this.mainCommandWidth();\\\\nconst wh = this.calcWindowHeight(rows, false);\\\\nconst wx = this.isRightInputMode() ? Graphics.boxWidth - ww : 0;\\\\nlet wy = this.mainAreaBottom() - wh;\\\\nif (this._goldWindow) wy -= this._goldWindow.height;\\\\nreturn new Rectangle(wx, wy, ww, wh);\\\"\"}","ParamBreak1":"----------------------------------","CommandWindowStyle:str":"default","CustomCmdWin:struct":"{\"Style:str\":\"auto\",\"TextAlign:str\":\"center\",\"Rows:num\":\"2\",\"Cols:num\":\"4\",\"MobileThickness:num\":\"5\"}","ParamBreak2":"----------------------------------","StatusGraphic:str":"face","StatusListStyle:str":"default","InnerMenuListStyle:str":"vertical","ListStyles:struct":"{\"DefaultStyle:func\":\"\\\"// Declare Constants\\\\nconst actor = arguments[0];\\\\nconst rect = arguments[1];\\\\n\\\\n// Draw Actor Graphic\\\\nconst gx = rect.x + (this.graphicType() === 'face' ? 1 : 0);\\\\nconst gy = rect.y + (this.graphicType() === 'face' ? 1 : 0);\\\\nconst gw = Math.min(rect.width, ImageManager.faceWidth);\\\\nconst gh = Math.min(rect.height, ImageManager.faceHeight);\\\\nthis.drawActorGraphic(actor, gx, gy, gw, gh);\\\\n\\\\n// Draw Status Stuff\\\\nconst sx = rect.x + 180;\\\\nconst sy = rect.y + rect.height / 2 - this.lineHeight() * 1.5;\\\\nconst lineHeight = this.lineHeight();\\\\nconst sx2 = sx + 180;\\\\nthis.drawActorName(actor, sx, sy);\\\\nthis.drawActorLevel(actor, sx, sy + lineHeight * 1);\\\\nthis.drawActorIcons(actor, sx, sy + lineHeight * 2);\\\\nthis.drawActorClass(actor, sx2, sy);\\\\n\\\\n// Place Gauges\\\\nconst sy2 = sy + lineHeight;\\\\nconst gaugeLineHeight = this.gaugeLineHeight();\\\\nthis.placeGauge(actor, \\\\\\\"hp\\\\\\\", sx2, sy2);\\\\nthis.placeGauge(actor, \\\\\\\"mp\\\\\\\", sx2, sy2 + gaugeLineHeight);\\\\nconst roomForTp = (sy2 + gaugeLineHeight * 3) <= rect.y + rect.height;\\\\nif ($dataSystem.optDisplayTp && roomForTp) {\\\\n    this.placeGauge(actor, \\\\\\\"tp\\\\\\\", sx2, sy2 + gaugeLineHeight * 2);\\\\n}\\\\n\\\\n// Following Requires VisuStella MZ's Core Engine\\\\n// Draw Additional Parameter Data if Enough Room\\\\nconst sx3 = sx2 + 180;\\\\nconst sw = rect.width - sx3 - 2;\\\\nif (Imported.VisuMZ_0_CoreEngine && sw >= 300) {\\\\n    const params = VisuMZ.CoreEngine.Settings.Param.DisplayedParams;\\\\n    const pw = Math.floor(sw / 2) - 24;\\\\n    let px = sx3;\\\\n    let py = rect.y + Math.floor((rect.height - (Math.ceil(params.length / 2) * gaugeLineHeight)) / 2);\\\\n    let counter = 0;\\\\n    for (const param of params) {\\\\n        this.resetFontSettings();\\\\n        this.drawParamText(px, py, pw, param, true);\\\\n        this.resetTextColor();\\\\n        this.contents.fontSize -= 8;\\\\n        const paramValue = actor.paramValueByName(param, true);\\\\n        this.contents.drawText(paramValue, px, py, pw, gaugeLineHeight, 'right');\\\\n        counter++;\\\\n        if (counter % 2 === 0) {\\\\n            px = sx3;\\\\n            py += gaugeLineHeight;\\\\n        } else {\\\\n            px += pw + 24;\\\\n        }\\\\n    }\\\\n}\\\"\",\"VerticalStyle:func\":\"\\\"// Declare Constants\\\\nconst actor = arguments[0];\\\\nconst rect = arguments[1];\\\\n\\\\n\\\\nconst lineHeight = this.lineHeight();\\\\nconst gaugeLineHeight = this.gaugeLineHeight();\\\\nconst totalHeight = (lineHeight * 4.5) + (gaugeLineHeight * ($dataSystem.optDisplayTp ? 3 : 2));\\\\n\\\\n// Draw Actor Graphic\\\\nconst gw = rect.width;\\\\nconst gh = Math.min(rect.height, ImageManager.faceHeight);\\\\nconst gx = rect.x;\\\\nconst gy = Math.max(rect.y, rect.y + (rect.height - totalHeight - gh) / 2);\\\\nthis.drawActorGraphic(actor, gx, gy, gw, gh);\\\\n\\\\n// Draw Actor Name\\\\nlet sx = rect.x;\\\\nlet sy = Math.max(gy + gh, rect.y + (rect.height - totalHeight + gh) / 2);\\\\nlet sw = rect.width;\\\\nthis.drawText(actor.name(), sx, sy, sw, 'center');\\\\n\\\\n// Draw Actor Level\\\\nsx = rect.x + Math.round((rect.width - 128) / 2);\\\\nsy += lineHeight;\\\\nthis.drawActorLevel(actor, sx, sy);\\\\n\\\\n// Draw Actor Class\\\\nconst className = actor.currentClass().name;\\\\nsx = rect.x + Math.round((rect.width - this.textSizeEx(className).width) / 2);\\\\nsy += lineHeight;\\\\nthis.drawTextEx(className, sx, sy, sw);\\\\n\\\\n// Draw Actor Icons\\\\nsx = rect.x + Math.round((rect.width - 128) / 2);\\\\nsy += lineHeight;\\\\nthis.drawActorIcons(actor, sx, sy);\\\\n\\\\n// Draw Gauges\\\\nsx = rect.x + Math.round((rect.width - 128) / 2);\\\\nsy += lineHeight;\\\\nthis.placeGauge(actor, \\\\\\\"hp\\\\\\\", sx, sy);\\\\nsy += gaugeLineHeight;\\\\nthis.placeGauge(actor, \\\\\\\"mp\\\\\\\", sx, sy);\\\\nsy += gaugeLineHeight;\\\\nif ($dataSystem.optDisplayTp) {\\\\n    this.placeGauge(actor, \\\\\\\"tp\\\\\\\", sx, sy);\\\\n}\\\"\",\"PortraitStyle:func\":\"\\\"// Declare Constants\\\\nconst actor = arguments[0];\\\\nconst rect = arguments[1];\\\\n\\\\n// Make Constants\\\\nconst lineHeight = this.lineHeight();\\\\nconst gaugeLineHeight = this.gaugeLineHeight();\\\\nconst totalHeight = (lineHeight * 4.5) + (gaugeLineHeight * ($dataSystem.optDisplayTp ? 3 : 2));\\\\n\\\\n// Draw Actor Graphic\\\\nconst gw = rect.width;\\\\nconst gh = rect.height;\\\\nconst gx = rect.x;\\\\nconst gy = rect.y;\\\\nthis.drawItemActorMenuImage(actor, gx, gy, gw, gh);\\\\n\\\\n// Draw Dark Rectangle\\\\nlet sx = rect.x;\\\\nlet sy = Math.max(rect.y, rect.y + (rect.height - totalHeight));\\\\nlet sw = rect.width;\\\\nlet sh = rect.y + rect.height - sy;\\\\nthis.contents.fillRect(sx+1, sy+lineHeight/2, sw-2, sh-1-lineHeight/2, ColorManager.dimColor1());\\\\nthis.contents.gradientFillRect(sx+1, sy-lineHeight/2, sw-2, lineHeight, ColorManager.dimColor2(), ColorManager.dimColor1(), true);\\\\n\\\\n// Draw Actor Name\\\\nthis.drawText(actor.name(), sx, sy, sw, 'center');\\\\n\\\\n// Draw Actor Level\\\\nsx = rect.x + Math.round((rect.width - 128) / 2);\\\\nsy += lineHeight;\\\\nthis.drawActorLevel(actor, sx, sy);\\\\n\\\\n// Draw Actor Class\\\\nconst className = actor.currentClass().name;\\\\nsx = rect.x + Math.round((rect.width - this.textSizeEx(className).width) / 2);\\\\nsy += lineHeight;\\\\nthis.drawTextEx(className, sx, sy, sw);\\\\n\\\\n// Draw Actor Icons\\\\nsx = rect.x + Math.round((rect.width - 128) / 2);\\\\nsy += lineHeight;\\\\nthis.drawActorIcons(actor, sx, sy);\\\\n\\\\n// Draw Gauges\\\\nsx = rect.x + Math.round((rect.width - 128) / 2);\\\\nsy += lineHeight;\\\\nthis.placeGauge(actor, \\\\\\\"hp\\\\\\\", sx, sy);\\\\nsy += gaugeLineHeight;\\\\nthis.placeGauge(actor, \\\\\\\"mp\\\\\\\", sx, sy);\\\\nsy += gaugeLineHeight;\\\\nif ($dataSystem.optDisplayTp) {\\\\n    this.placeGauge(actor, \\\\\\\"tp\\\\\\\", sx, sy);\\\\n}\\\"\",\"SoloStyle:func\":\"\\\"// Declare Constants\\\\nconst actor = arguments[0];\\\\nconst rect = arguments[1];\\\\n\\\\n// Make Constants\\\\nconst lineHeight = this.lineHeight();\\\\nconst gaugeLineHeight = this.gaugeLineHeight();\\\\n\\\\n// Draw Actor Graphic\\\\nlet sx = rect.x;\\\\nlet sy = rect.y;\\\\nlet sw = rect.width;\\\\nlet sh = rect.height;\\\\n\\\\n// Portrait\\\\nif (actor.getMenuImage() !== '') {\\\\n    this.drawItemActorMenuImage(actor, rect.x, rect.y, rect.width, rect.height);\\\\n\\\\n// Everything Else\\\\n} else {\\\\n    const gx = Math.max(0, rect.x + Math.floor(((rect.width / 2) - ImageManager.faceWidth) / 2));\\\\n    const gy = Math.max(0, rect.y + rect.height - Math.ceil(lineHeight * 4.5) - ImageManager.faceHeight);\\\\n    this.drawActorGraphic(actor, gx, gy, ImageManager.faceWidth, ImageManager.faceHeight);\\\\n}\\\\n\\\\n// Draw Dark Rectangle\\\\nsh = Math.ceil(lineHeight * 4.5);\\\\nsy = rect.y + rect.height - sh;\\\\nthis.contents.fillRect(sx+1, sy+lineHeight/2, sw-2, sh-1-lineHeight/2, ColorManager.dimColor1());\\\\nthis.contents.gradientFillRect(sx+1, sy-lineHeight/2, sw-2, lineHeight, ColorManager.dimColor2(), ColorManager.dimColor1(), true);\\\\n\\\\n// Draw Actor Name\\\\nsw = Math.round(rect.width / 2);\\\\nthis.drawText(actor.name(), sx, sy, sw, 'center');\\\\n\\\\n// Draw Actor Level\\\\nsx = Math.max(0, rect.x + Math.floor(((rect.width / 2) - 128) / 2));\\\\nsy += lineHeight;\\\\nthis.drawActorLevel(actor, sx, sy);\\\\n\\\\n// Draw Actor Class\\\\nconst className = actor.currentClass().name;\\\\nsx = rect.x + Math.round(((rect.width / 2) - this.textSizeEx(className).width) / 2);\\\\nsy += lineHeight;\\\\nthis.drawTextEx(className, sx, sy, sw);\\\\n\\\\n// Draw Actor Icons\\\\nsx = rect.x + Math.round(((rect.width / 2) - 128) / 2);\\\\nsy += lineHeight;\\\\nthis.drawActorIcons(actor, sx, sy);\\\\n\\\\n// Prepare Stat Coordinates\\\\nsx = rect.x + Math.floor(rect.width / 2);\\\\nsw = rect.width / 2;\\\\nsh = rect.height;\\\\nconst sx3 = sx;\\\\nconst cw = rect.width - sx3 - 2;\\\\n\\\\n// Prepare Total Content Height to vertically center the content.\\\\nlet totalHeight = gaugeLineHeight * ($dataSystem.optDisplayTp ? 3 : 2);\\\\nif (Imported.VisuMZ_0_CoreEngine && cw >= 300) {\\\\n    const params = VisuMZ.CoreEngine.Settings.Param.DisplayedParams;\\\\n    totalHeight += lineHeight;\\\\n    totalHeight += Math.ceil(params.length / 2) * gaugeLineHeight;\\\\n}\\\\nconst equips = actor.equips();\\\\ntotalHeight += lineHeight;\\\\ntotalHeight += equips.length * lineHeight;\\\\nsy = Math.max(rect.y, rect.y + Math.floor((rect.height - totalHeight) / 2));\\\\n\\\\n// Place Gauges\\\\nthis.placeGauge(actor, \\\\\\\"hp\\\\\\\", sx, sy);\\\\nsy += gaugeLineHeight;\\\\nthis.placeGauge(actor, \\\\\\\"mp\\\\\\\", sx, sy);\\\\nif ($dataSystem.optDisplayTp) {\\\\n    sy += gaugeLineHeight;\\\\n    this.placeGauge(actor, \\\\\\\"tp\\\\\\\", sx, sy);\\\\n    sy += gaugeLineHeight;\\\\n}\\\\nlet ny = sy;\\\\n\\\\n// Following Requires VisuStella MZ's Core Engine\\\\n// Draw Additional Parameter Data if Enough Room\\\\nif (Imported.VisuMZ_0_CoreEngine && cw >= 300) {\\\\n    const params = VisuMZ.CoreEngine.Settings.Param.DisplayedParams;\\\\n    sy += lineHeight;\\\\n    const pw = Math.floor(cw / 2) - 24;\\\\n    let px = sx3;\\\\n    let counter = 0;\\\\n    for (const param of params) {\\\\n        this.resetFontSettings();\\\\n        this.drawParamText(px, sy, pw, param, true);\\\\n        this.resetTextColor();\\\\n        this.contents.fontSize -= 8;\\\\n        const paramValue = actor.paramValueByName(param, true);\\\\n        this.contents.drawText(paramValue, px, sy, pw, gaugeLineHeight, 'right');\\\\n        counter++;\\\\n        if (counter % 2 === 0) {\\\\n            px = sx3;\\\\n            sy += gaugeLineHeight;\\\\n        } else {\\\\n            px += pw + 24;\\\\n        }\\\\n    }\\\\n    ny += lineHeight;\\\\n    ny += Math.ceil(params.length / 2) * gaugeLineHeight;\\\\n}\\\\n\\\\n// Draw Actor Equipment\\\\nthis.resetFontSettings();\\\\nsx = rect.x + Math.floor(rect.width / 2);\\\\nsy = ny + lineHeight;\\\\nsw = rect.width / 2;\\\\nfor (const equip of equips) {\\\\n    if (equip) {\\\\n        this.drawItemName(equip, sx, sy, sw);\\\\n        sy += lineHeight;\\\\n        if (sy + lineHeight > rect.y + rect.height) return;\\\\n    }\\\\n}\\\"\",\"ThinStyle:func\":\"\\\"// Declare Constants\\\\nconst actor = arguments[0];\\\\nconst rect = arguments[1];\\\\n\\\\n// Draw Actor Graphic\\\\nconst gx = rect.x + (this.graphicType() === 'face' ? 1 : 0);\\\\nconst gy = rect.y + (this.graphicType() === 'face' ? 1 : 0);\\\\nconst gw = Math.min(rect.width, ImageManager.faceWidth);\\\\nconst gh = Math.min(rect.height, ImageManager.faceHeight);\\\\nthis.drawActorGraphic(actor, gx, gy, gw, gh);\\\\n\\\\n// Draw Status Stuff\\\\nconst lineHeight = this.lineHeight();\\\\nlet sx = rect.x + 160;\\\\nlet sy = rect.y + ((rect.height - lineHeight) / 2) - 2;\\\\n\\\\n// Draw Actor Data\\\\nthis.drawActorName(actor, sx, sy);\\\\nthis.drawActorLevel(actor, gx+8, rect.y + rect.height - lineHeight +1);\\\\n\\\\n// Place Gauges\\\\nsx += 180;\\\\nsy += (lineHeight - this.gaugeLineHeight()) / 2;\\\\nthis.placeGauge(actor, \\\\\\\"hp\\\\\\\", sx, sy);\\\\nsx += 140;\\\\nif ((sx + 128) > rect.x + rect.width) return;\\\\nthis.placeGauge(actor, \\\\\\\"mp\\\\\\\", sx, sy);\\\\nsx += 140;\\\\nif ((sx + 128) > rect.x + rect.width) return;\\\\nif ($dataSystem.optDisplayTp) this.placeGauge(actor, \\\\\\\"tp\\\\\\\", sx, sy);\\\"\",\"ThickerStyle:func\":\"\\\"// Declare Constants\\\\nconst actor = arguments[0];\\\\nconst rect = arguments[1];\\\\n\\\\n// Draw Actor Graphic\\\\nconst gx = rect.x + (this.graphicType() === 'face' ? 1 : 0);\\\\nconst gy = rect.y + (this.graphicType() === 'face' ? 1 : 0);\\\\nconst gw = Math.min(rect.width, ImageManager.faceWidth);\\\\nconst gh = Math.min(rect.height, ImageManager.faceHeight);\\\\nthis.drawActorGraphic(actor, gx, gy, gw, gh);\\\\n\\\\n// Draw Status Stuff\\\\nconst lineHeight = this.lineHeight();\\\\nconst gaugeLineHeight = this.gaugeLineHeight();\\\\nlet sx = rect.x + 160;\\\\nlet sy = rect.y + ((rect.height - (lineHeight * 2)) / 2) - 2;\\\\n\\\\n// Draw Actor Data\\\\nthis.drawActorLevel(actor, gx+8, rect.y + rect.height - lineHeight +1);\\\\nthis.drawActorName(actor, sx, sy);\\\\nthis.drawActorClass(actor, sx, sy + lineHeight);\\\\n//this.drawActorLevel(actor, sx, sy + lineHeight);\\\\n\\\\n// Place Gauges\\\\nsx += 180;\\\\nsy = rect.y + ((rect.height - (gaugeLineHeight * ($dataSystem.optDisplayTp ? 3 : 2))) / 2) - 2;\\\\nthis.placeGauge(actor, \\\\\\\"hp\\\\\\\", sx, sy);\\\\nthis.placeGauge(actor, \\\\\\\"mp\\\\\\\", sx, sy + gaugeLineHeight);\\\\nif ($dataSystem.optDisplayTp) this.placeGauge(actor, \\\\\\\"tp\\\\\\\", sx, sy + (gaugeLineHeight * 2));\\\\nsx += 160;\\\\n\\\\n// Following Requires VisuStella MZ's Core Engine\\\\n// Draw Additional Parameter Data if Enough Room\\\\nconst sx3 = sx;\\\\nconst sw = rect.width - sx3 - 2;\\\\nif (Imported.VisuMZ_0_CoreEngine && sw >= 300) {\\\\n    const params = VisuMZ.CoreEngine.Settings.Param.DisplayedParams;\\\\n    const pw = Math.floor(sw / 2) - 24;\\\\n    sy = rect.y + ((rect.height - (gaugeLineHeight * Math.ceil(params.length / 2))) / 2) - 2;\\\\n    let px = sx3;\\\\n    let py = rect.y + Math.floor((rect.height - (Math.ceil(params.length / 2) * gaugeLineHeight)) / 2);\\\\n    let counter = 0;\\\\n    for (const param of params) {\\\\n        this.resetFontSettings();\\\\n        this.drawParamText(px, py, pw, param, true);\\\\n        this.resetTextColor();\\\\n        this.contents.fontSize -= 8;\\\\n        const paramValue = actor.paramValueByName(param, true);\\\\n        this.contents.drawText(paramValue, px, py, pw, gaugeLineHeight, 'right');\\\\n        counter++;\\\\n        if (counter % 2 === 0) {\\\\n            px = sx3;\\\\n            py += gaugeLineHeight;\\\\n        } else {\\\\n            px += pw + 24;\\\\n        }\\\\n    }\\\\n}\\\"\"}","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}}
];
